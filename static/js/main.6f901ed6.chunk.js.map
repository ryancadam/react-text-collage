{"version":3,"sources":["components/srcTxt/srcTxt.module.css","components/collageText/collage.module.css","App.module.css","components/Backdrop/Backdrop.module.css","components/Toolbar/Toolbar.module.css","components/Backdrop/Backdrop.js","components/collageText/collage.js","components/srcTxt/srcTxt.js","components/Toolbar/Toolbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backdrop","props","show","className","style","Backdrop","onClick","clicked","Collage","shuffled","cutup1","concat","cutup2","map","a","sort","Math","random","value","b","collageTxt","x","length","line","push","closed","Card","transform","opacity","SrcTxt","onSubmit","submitted","Src","Text","name","id","placeholder","rows","cols","maxLength","BtnContainer","Btn","type","Toolbar","App","useState","txt1","setTxt1","txt2","setTxt2","showCollage","setShowCollage","fontSize","e","preventDefault","newTxt1","target","userTxt1","newTxt2","userTxt2","slice","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6f901ed6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Src\":\"srcTxt_Src__Tp1Fn\",\"Text\":\"srcTxt_Text__3jD7r\",\"BtnContainer\":\"srcTxt_BtnContainer__3Ymd3\",\"Btn\":\"srcTxt_Btn__sEVsy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"collage_Card__2Ioxg\",\"Collage\":\"collage_Collage__2bORZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__5mxAT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3nZ4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__eWmaY\"};","import React from 'react';\r\nimport style from './Backdrop.module.css';\r\n\r\nconst backdrop = props => (\r\n    props.show ? <div className={style.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\n\r\nexport default backdrop;","import React from \"react\";\r\nimport style from \"./collage.module.css\";\r\n\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\nconst Collage = (props) => {\r\n  // combining inputs\r\n  let joined = props.cutup1.concat(props.cutup2);\r\n  // shuffling them\r\n  let shuffled = joined\r\n    .map((a) => ({ sort: Math.random(), value: a }))\r\n    .sort((a, b) => a.sort - b.sort)\r\n    .map((a) => a.value);\r\n  //making 'lines' by pairing every two elements in shuffled array\r\n  let collageTxt = [];\r\n  for (let x = 0; x < shuffled.length; x += 2) {\r\n    let line = shuffled[x].concat(\" \", shuffled[x + 1], \" \");\r\n    collageTxt.push(line);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Backdrop show={props.show} clicked={props.closed} />\r\n      <div\r\n        className={style.Card}\r\n        style={{\r\n          transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n          opacity: props.show ? \"1\" : \"0\",\r\n        }}\r\n      >\r\n        <p className={style.Collage}>{collageTxt}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Collage;\r\n// Our sacred task, our righteous duty and our solemn pledge is to carry forward the noble legacy of the brave souls who gave their lives for us 19 years ago,” Mr. Trump said. At another point, he added, “The only thing that stood between the enemy and a deadly strike at the heart of American democracy was the courage and resolve of 40 men and women — the amazing passengers and crew of Flight 93.” Mr. Biden and his wife, Jill, attended the National September 11 Memorial & Museum’s commemoration ceremony in Lower Manhattan, standing with Gov. Andrew M. Cuomo of New York for much of the time. Then the Bidens traveled to Shanksville, where Mr. Biden laid a wreath of white flowers at the Flight 93 National Memorial and met family members of some of those who died. (Mr. Trump, during his morning visit there, also laid a wreath of white flowers in front of the wall of names, but h\r\n//Europeans can gripe about having to do business with the Russian state and Russian planners may complain about being beholden to the European market, but geography conspires against them. The gas is where it is. The rivers run where they must. And the relationship between Germany and Russia is about more than grubby transactions over energy.\r\n","import React from \"react\";\r\n\r\nimport style from \"./srcTxt.module.css\";\r\n\r\nconst SrcTxt = (props) => {\r\n  return (\r\n    <form onSubmit={props.submitted}>\r\n      <div className={style.Src}>\r\n        <textarea\r\n          className={style.Text}\r\n          name=\"userTxt1\"\r\n          id=\"userTxt1\"\r\n          placeholder=\"Copy/paste or type text here. For best results, fill the box!\"\r\n          rows=\"15\"\r\n          cols=\"30\"\r\n          maxLength=\"700\"\r\n        ></textarea>\r\n        <textarea\r\n          className={style.Text}\r\n          name=\"userTxt2\"\r\n          id=\"userTxt2\"\r\n          placeholder=\"Copy/paste or type text here. For best results, fill the box!\"\r\n          rows=\"15\"\r\n          cols=\"30\"\r\n          maxLength=\"700\"\r\n        ></textarea>\r\n      </div>\r\n      <div className={style.BtnContainer}>\r\n        <button className={style.Btn} type=\"submit\">Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SrcTxt;\r\n","import React from \"react\";\r\nimport style from \"./Toolbar.module.css\";\r\n\r\nconst Toolbar = (props) => {\r\n  return (\r\n    <div className={style.Toolbar}>\r\n      <div>New User</div>\r\n      <div>Log in</div>\r\n      <div>My Collages</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;","import React, { useState } from \"react\";\nimport style from \"./App.module.css\";\n\nimport Collage from \"./components/collageText/collage\";\nimport SrcTxt from \"./components/srcTxt/srcTxt\";\nimport Toolbar from \"./components/Toolbar/Toolbar\";\n\nconst App = () => {\n  const [txt1, setTxt1] = useState([]);\n  const [txt2, setTxt2] = useState([]);\n  const [showCollage, setShowCollage] = useState(false);\n\n  const SubmitHandler = (e) => {\n    e.preventDefault();\n\n    setTxt1([]);\n    setTxt2([]);\n    let newTxt1 = e.target.userTxt1.value;\n    let newTxt2 = e.target.userTxt2.value;\n    for (let x = 0; x < newTxt1.length - 31; x += 31) {\n      setTxt1((txt1) => [...txt1, newTxt1.slice(x, x + 31)]);\n    }\n    for (let x = 0; x < newTxt2.length - 31; x += 31) {\n      setTxt2((txt2) => [...txt2, newTxt2.slice(x, x + 31)]);\n    }\n    setShowCollage(true);\n  };\n\n  const CloseCollageHandler = () => {\n    setShowCollage(false);\n  };\n\n  return (\n    <>\n      <Toolbar />\n      <div className={style.App}>\n        <div style={{ fontSize: \"22px\" }}>Create a Text Collage!</div>\n        <p>Tip - try combining a poem with a news article.</p>\n        <SrcTxt submitted={SubmitHandler} />\n        <Collage\n          show={showCollage}\n          closed={CloseCollageHandler}\n          cutup1={txt1}\n          cutup2={txt2}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}